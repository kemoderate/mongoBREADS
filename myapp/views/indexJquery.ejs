<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title></title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css">
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.3/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/js/bootstrap.min.js"></script>
</head>

<body>
    <div class="container">
        <h1>BREADS (Browse, Read, Update, Delete, Sort)</h1>
        <h4>Fillters</h4>

        <form id="filter-form">
            <input type="hidden" name="page" value="1">
            <div class="row mb-3">
                <label for="inputId" class="col-sm-4 col-form-label">
                    <input type="checkbox" name="checkId" id="checkId">
                    ID
                </label>
                <div class="col-sm-8">
                    <input type="text" class="form-control" id="idFilter" name="id">
                </div>
            </div>
                <div class="row mb-3">
                <label for="inputStr" class="col-sm-4 col-form-label">
                    <input type="checkbox" name="checkStr" id="checkStr">
                    String
                </label>
                <div class="col-sm-8">
                    <input type="text" class="form-control" id="strFilter" name="string">
                </div>
            </div>
            <div class="row mb-3">
                <label for="inputInt" class="col-sm-4 col-form-label">
                    <input type="checkbox" name="checkInt" id="checkInt">
                    Integer
                </label>
                <div class="col-sm-8">
                    <input type="text" class="form-control" id="intFilter" name="integer">
                </div>
            </div>
            <div class="row mb-3">
                <label for="inputFloat" class="col-sm-4 col-form-label">
                    <input type="checkbox" name="checkFloat" id="checkFloat">
                    Float
                </label>
                <div class="col-sm-8">
                    <input type="text" class="form-control" id="floatFilter" name="float">
                </div>
            </div>
            <div class="row mb-3">
                <label for="inputDate" class="col-sm-4 col-form-label">
                    <input type="checkbox" name="checkDate" id="checkDate">
                    Date
                </label>
                <div class="col-sm-4">
                    <input type="date" class="form-control" id="startDateFilter" name="startDate">
                    to
                    <input type="date" class="form-control" id="endDateFilter" name="endDate">
                </div>
            </div>
            <div class="row mb-3">
                <label for="inputBol" class="col-sm-4 col-form-label">
                    <input type="checkbox" name="checkBol" id="checkBol">
                    Boolean
                </label>
                <div class="col-sm-8">
                    <select name="boolean" id="booleanFilter" class="form-select">
                        <option>Choose the boolean</option>
                        <option value="true">True</option>
                        <option value="false">False</option>
                    </select>
                </div>
            </div>
            <button type="submit" class="btn btn-primary">Filter</button>
            <a href="/Jquery" class="btn btn-secondary">Reset</a>
        </form>

        <table class="table mt-4">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>String</th>
                    <th>Integer</th>
                    <th>Float</th>
                    <th>Date</th>
                    <th>Boolean</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody id="table-body"></tbody>
        </table>

        <nav aria-label="Page navigation">
            <ul class="pagination justify-content-center" id="pagination"></ul>
        </nav>
    </div>

    <script src="https://momentjs.com/downloads/moment.min.js"></script>
    <script>
        function getBreads(params) {
            const url = `http://localhost:3000/data?${$.param(params)}`;
            $.get(url, function (data) {
                displayBreads(data);
                displayPagination(data);
            });
        }

        function displayBreads(data) {
            const tableBody = $('#table-body');
            tableBody.empty();

            if (data.data.length === 0) {
                const row = $('<tr>').html('<td colspan="7" class="text-center">No data found.</td>');
                tableBody.append(row);
            } else {
                data.data.forEach(function (bread) {
                    const row = $('<tr>');
                    row.append($('<td>').text(bread.number));
                    row.append($('<td>').text(bread.string));
                    row.append($('<td>').text(bread.integer));
                    row.append($('<td>').text(bread.float));
                    row.append($('<td>').text(bread.date));
                    row.append($('<td>').text(bread.boolean ? 'True' : 'False'));

                    const editButton = $('<button>').addClass('btn btn-primary btn-sm mr-1').text('Edit');
                    editButton.click(function () {
                        editBread(bread._id);
                    });
                    row.append($('<td>').append(editButton));

                    tableBody.append(row);
                });
            }
        }

        function displayPagination(data) {
            const pagination = $('#pagination');
            pagination.empty();

            for (let i = 1; i <= data.pages; i++) {
                const pageItem = $('<li>').addClass('page-item');
                const pageLink = $('<a>').addClass('page-link').attr('href', '#').text(i);

                if (i === data.page) {
                    pageItem.addClass('active');
                } else {
                    pageLink.click(function () {
                        const params = getFilterParams();
                        params.page = i;
                        getBreads(params);
                    });
                }

                pageItem.append(pageLink);
                pagination.append(pageItem);
            }
        }

        function editBread(id) {
            const url = `/api/breads/edit/${id}`;
            $.get(url, function (data) {
                if (data.length > 0) {
                    const bread = data[0];
                    $('#editId').val(bread._id);
                    $('#editNumber').val(bread.number);
                    $('#editString').val(bread.string);
                    $('#editInteger').val(bread.integer);
                    $('#editFloat').val(bread.float);
                    $('#editDate').val(bread.date);
                    $('#editBoolean').val(bread.boolean.toString());
                    $('#editModal').modal('show');
                } else {
                    alert('Bread not found.');
                }
            });
        }

        function resetFilter() {
            $('#filter-form')[0].reset();
            getBreads({});
        }

        function getFilterParams() {
            const params = {};
            const filterForm = $('#filter-form');

            if ($('#checkId').is(':checked')) {
                params.checkId = true;
                params.id = $('#id').val();
            }

            if ($('#checkStr').is(':checked')) {
                params.checkStr = true;
                params.string = $('#string').val();
            }

            if ($('#checkInt').is(':checked')) {
                params.checkInt = true;
                params.integer = $('#integer').val();
            }

            if ($('#checkFloat').is(':checked')) {
                params.checkFloat = true;
                params.float = $('#float').val();
            }

            if ($('#checkDate').is(':checked')) {
                params.checkDate = true;
                params.startDate = $('#startDate').val();
                params.endDate = $('#endDate').val();
            }

            if ($('#checkBol').is(':checked')) {
                params.checkBol = true;
                params.boolean = $('#boolean').val();
            }

            return params;
        }

        $(document).ready(function () {
            $('#filter-form').submit(function (e) {
                e.preventDefault();
                const params = getFilterParams();
                params.page = 1;
                getBreads(params);
            });

            $('#reset-filter').click(function () {
                resetFilter();
            });

            resetFilter();
        });
    </script>
</body>

</html>
