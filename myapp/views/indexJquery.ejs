<!DOCTYPE html>
<html>

<head>
    <title>
    </title>
    <link rel='stylesheet' href='/stylesheets/style.css' />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-KK94CHFLLe+nY2dmCWGMq91rCGa5gtU4mk92HdvYe+M/SXH301p5ILy+dN9+nJOZ" crossorigin="anonymous">
    <script src="https://kit.fontawesome.com/6ea2cb925f.js" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.4/moment.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.7.0.min.js"></script>
    <style>
        .sort-icon {
            margin-left: 5px;
        }

        .sort-icon.asc:before {
            content: "\f0de";
        }

        .sort-icon.desc:before {
            content: "\f0dd";
        }
    </style>
</head>

<body>
    <div class="container">
        <h1>BREADS (Browse, Read, Update, Delete, Sort)</h1>
        <h4>Filters</h4>
        <form id="filter-form">
            <input type="hidden" name="page" value="1">
            <div class="row mb-3">
                <label for="inputId" class="col-sm-4 col-form-label">
                    <input type="checkbox" name="checkId" id="checkId">
                    ID
                </label>
                <div class="col-sm-8">
                    <input type="text" class="form-control" id="idFilter" name="id">
                </div>
            </div>
            <div class="row mb-3">
                <label for="inputStr" class="col-sm-4 col-form-label">
                    <input type="checkbox" name="checkStr" id="checkStr">
                    String
                </label>
                <div class="col-sm-8">
                    <input type="text" class="form-control" id="strFilter" name="string">
                </div>
            </div>
            <div class="row mb-3">
                <label for="inputInt" class="col-sm-4 col-form-label">
                    <input type="checkbox" name="checkInt" id="checkInt">
                    Integer
                </label>
                <div class="col-sm-8">
                    <input type="text" class="form-control" id="intFilter" name="integer">
                </div>
            </div>
            <div class="row mb-3">
                <label for="inputFloat" class="col-sm-4 col-form-label">
                    <input type="checkbox" name="checkFloat" id="checkFloat">
                    Float
                </label>
                <div class="col-sm-8">
                    <input type="text" class="form-control" id="floatFilter" name="float">
                </div>
            </div>
            <div class="row mb-3">
                <label for="inputDate" class="col-sm-4 col-form-label">
                    <input type="checkbox" name="checkDate" id="checkDate">
                    Date
                </label>
                <div class="col-sm-4">
                    <input type="date" class="form-control" id="startDateFilter" name="startDate">
                    to
                    <input type="date" class="form-control" id="endDateFilter" name="endDate">
                </div>
            </div>
            <div class="row mb-3">
                <label for="inputBol" class="col-sm-4 col-form-label">
                    <input type="checkbox" name="checkBol" id="checkBol">
                    Boolean
                </label>
                <div class="col-sm-8">
                    <select name="boolean" id="booleanFilter" class="form-select">
                        <option>Choose the boolean</option>
                        <option value="true">True</option>
                        <option value="false">False</option>
                    </select>
                </div>
            </div>
            <button type="submit" class="btn btn-primary">Search</button>
            <a href="/jquery" class="btn btn-secondary">Back</a>
        </form>
        <form id="create-form" style="display: none;">
            <div class="row mb-3">
                <label for="inputId" class="col-sm-4 col-form-label">
                    ID
                </label>
                <div class="col-sm-8">
                    <input type="text" class="form-control" id="id" name="id">
                </div>
            </div>
            <div class="row mb-3">
                <label for="inputStr" class="col-sm-4 col-form-label">
                    String
                </label>
                <div class="col-sm-8">
                    <input type="text" class="form-control" id="string" name="string">
                </div>
            </div>
            <div class="row mb-3">
                <label for="inputInt" class="col-sm-4 col-form-label">
                    Integer
                </label>
                <div class="col-sm-8">
                    <input type="text" class="form-control" id="integer" name="integer">
                </div>
            </div>
            <div class="row mb-3">
                <label for="inputFloat" class="col-sm-4 col-form-label">
                    Float
                </label>
                <div class="col-sm-8">
                    <input type="text" class="form-control" id="float" name="float">
                </div>
            </div>
            <div class="row mb-3">
                <label for="inputDate" class="col-sm-4 col-form-label">
                    Date
                </label>
                <div class="col-sm-4">
                    <input type="date" class="form-control" id="startDate" name="startDate">
                </div>
            </div>
            <div class="row mb-3">
                <label for="inputBol" class="col-sm-4 col-form-label">
                    Boolean
                </label>
                <div class="col-sm-8">
                    <select name="boolean" id="boolean" class="form-select">
                        <option>Choose the boolean</option>
                        <option value="true">True</option>
                        <option value="false">False</option>
                    </select>
                </div>
            </div>
            <!-- <button class="btn btn-primary">Search</button> -->
            <button type="submit" class="btn btn-primary">Save</button>
            <a onclick="closeAdd()" class="btn btn-secondary">Close</a>
        </form>
    </div>
    <br>
    <form id="edit-form" style="display: none;">
        <div class="row mb-3">
            <label for="inputId" class="col-sm-4 col-form-label">
                ID
            </label>
            <div class="col-sm-8">
                <input type="text" class="form-control" id="id2" name="id">
            </div>
        </div>
        <div class="row mb-3">
            <label for="inputStr" class="col-sm-4 col-form-label">
                String
            </label>
            <div class="col-sm-8">
                <input type="text" class="form-control" id="string2" name="string">
            </div>
        </div>
        <div class="row mb-3">
            <label for="inputInt" class="col-sm-4 col-form-label">
                Integer
            </label>
            <div class="col-sm-8">
                <input type="text" class="form-control" id="integer2" name="integer">
            </div>
        </div>
        <div class="row mb-3">
            <label for="inputFloat" class="col-sm-4 col-form-label">
                Float
            </label>
            <div class="col-sm-8">
                <input type="text" class="form-control" id="float2" name="float">
            </div>
        </div>
        <div class="row mb-3">
            <label for="inputDate" class="col-sm-4 col-form-label">
                Date
            </label>
            <div class="col-sm-4">
                <input type="date" class="form-control" id="startDate2" name="startDate">
            </div>
        </div>
        <div class="row mb-3">
            <label for="inputBol" class="col-sm-4 col-form-label">
                Boolean
            </label>
            <div class="col-sm-8">
                <select name="boolean" id="boolean2" class="form-select">
                    <option>Choose the boolean</option>
                    <option value="true">True</option>
                    <option value="false">False</option>
                </select>
            </div>
        </div>
        <button type="submit" class="btn btn-info">Save</button>
        <a onclick="closeEdit()" class="btn btn-secondary">Close</a>
    </form>
    <div class="container">
        <table class="table table-striped table-bordered">
            <thead id="data-head">
            </thead>
            <tbody id="data-body">
            </tbody>
        </table>
        <br>
        <nav aria-label="Page navigation example">
            <ul class="pagination" id="pagination">
            </ul>
        </nav>
        <button type="submit" onclick="showAdd()" class="btn btn-primary">Add</button>
        <div id="edit-form-container"></div>
    </div>

    <script type="text/javascript">
        let id3;

        let params = {
            page: 1,
            sortby: '',
            sortorder: ''
        };
        $(document).ready(() => {
            $('#create-form').submit((event) => {
                event.preventDefault();
                const number = $('#id').val()
                const string = $('#string').val()
                const integer = $('#integer').val()
                const float = $('#float').val()
                const date = $('#startDate').val()
                const boolean = $('#boolean').val()
                createData(number, string, integer, float, date, boolean)
            })
        });
        $(document).ready(() => {
            $('#filter-form').submit((event) => {
                event.preventDefault();
                params.page = 1;
                readData(getFilterParams());
            })
        
        
            $("#edit-form").submit(function (event) {
                event.preventDefault();
                updateData(); // Pass the id3 parameter to the function
            });
        });
        function getFilterParams() {
            const filterParams = {};

            if ($("#checkId").is(":checked")) {
                filterParams.checkId = true;
                filterParams.id = $("#idFilter").val();
            }

            if ($("#checkStr").is(":checked")) {
                filterParams.checkStr = true;
                filterParams.string = $("#strFilter").val();
            }

            if ($("#checkInt").is(":checked")) {
                filterParams.checkInt = true;
                filterParams.integer = $("#intFilter").val();
            }

            if ($("#checkFloat").is(":checked")) {
                filterParams.checkFloat = true;
                filterParams.float = $("#floatFilter").val();
            }

            if ($("#checkDate").is(":checked")) {
                filterParams.checkDate = true;
                filterParams.startDate = $("#startDateFilter").val();
                filterParams.endDate = $("#endDateFilter").val();
            }

            if ($("#checkBol").is(":checked")) {
                filterParams.checkBol = true;
                filterParams.boolean = $("#booleanFilter").val();
            }

            return filterParams;
        }
        const readData = (filterParams) => {
            const mergedParams = { ...params, ...filterParams };
            const queryString = Object.keys(mergedParams)
                .filter((key) => mergedParams[key] !== '')
                .map((key) => `${key}=${mergedParams[key]}`)
                .join('&');

            const url = `http://localhost:3000/data?${queryString}`;

            $.ajax({
                url: url,
                method: 'GET'
            })
                .done(function (response) {
                    const { data, page, pages, query, sortby, sortorder } = response;
                    params.page = page;
                    displayData(data, sortby, sortorder);
                    pagination(page, pages);
                    sortData(sortby, sortorder);
                })
                .fail(function (xhr, status, error) {
                    console.log("Error: " + status);
                    // Handle error, display a message
                });
        };

        const createData = (number, string, integer, float, date, boolean) => {
            $.ajax({
                method: 'POST',
                url: 'http://localhost:3000/data',
                data: { number, string, integer, float, date, boolean }
            }).done((data) => {
                $('#id').val('')
                $('#string').val('')
                $('#integer').val('')
                $('#float').val('')
                $('#startDate').val('')
                $('#boolean').val('')
                readData()
            }).fail((error) => {
                console.log(error)
            })
        };

        const updateData = () => {
            const number = $('#id2').val();
            const string = $('#string2').val();
            const integer = $('#integer2').val();
            const float = $('#float2').val();
            const date = $('#startDate2').val();
            const boolean = $('#boolean2').val();

            const data = {
                number: number,
                string: string,
                integer: integer,
                float: float,
                date: date,
                boolean: boolean
            };

            if (!number || !string || !integer || !float || !date || !boolean) {
                alert('Please, insert the data');
                return;
            }

            $.ajax({
                method: 'PUT',
                url: `http://localhost:3000/data/${id3}`,
                data: data
            })
                .done((response) => {
                    console.log('Success:', response);
                    $('#id').val('');
                    $('#string').val('');
                    $('#integer').val('');
                    $('#float').val('');
                    $('#startDate').val('');
                    $('#boolean').val('');
                    readData();
                })
                .fail((error) => {
                    console.log(error);
                });
        };

        function showEdit(id) {
            if (id === undefined) {
                console.error('Error: ID is undefined');
                return;
            }

            id3 = id;
            const form = $("#edit-form");

            $.ajax({
                url: `http://localhost:3000/data/edit/${id}`,
                method: 'GET',
                success: function (data) {
                    form.find("#id2").val(data[0].number);
                    form.find("#string2").val(data[0].string);
                    form.find("#integer2").val(data[0].integer);
                    form.find("#float2").val(data[0].float);
                    form.find("#startDate2").val(moment(new Date(data[0].date)).format('YYYY-MM-DD'));
                    form.find("#boolean2").val(data[0].boolean);
                },
                error: function (error) {
                    console.log('Error:', error);
                }
            });

            form.css('display', 'block');
        }



        const deleteData = (id) => {
            $.ajax({
                method: 'DELETE',
                url: `http://localhost:3000/data/${id}`,
                data: { id }
            }).done((data) => {
                readData()
            }).fail((error) => {
                console.error(error);
            })
        };
        
        const displayData = (data) => {
            let html = "";
            data.forEach(item => {
                html += `
                    <tr>
                        <td>${item.number}</td>
                        <td>${item.string}</td>
                        <td>${item.integer}</td>
                        <td>${item.float}</td>
                        <td>${item.date}</td>
                        <td>${item.boolean}</td>
                        <td>
                            <button class="btn btn-success btn-sm" onclick="showEdit('${item._id}')">Edit</button>
                            <button class="btn btn-danger btn-sm" onclick="deleteData('${item._id}')">Hapus</button>
                        </td>
                    </tr>`
            });
            $('#data-body').html(html)
        };
        const sortData = (sortby, sortorder) => {
            let html = `
                <tr align="center">
                    <th>
                        ID
                        <a href="javascript:void(0)" onclick="changeSort('number', '${sortby == 'number' && sortorder == 'asc' ? 'desc' : 'asc'}')">
                            <span class="fa ${sortby === 'number' ? (sortorder === 'asc' ? 'fa-sort-up' : 'fa-sort-down') : 'fa-sort'}"></span>
                        </a>
                    </th>
                    <th>

                        String
                        <a href="javascript:void(0)" onclick="changeSort('string', '${sortby == 'string' && sortorder == 'asc' ? 'desc' : 'asc'}')">
                            <span class="fa ${sortby === 'string' ? (sortorder === 'asc' ? 'fa-sort-up' : 'fa-sort-down') : 'fa-sort'}"></span>
                        </a>
                    </th>
                    <th>
                        Integer
                        <a href="javascript:void(0)" onclick="changeSort('integer', '${sortby == 'integer' && sortorder == 'asc' ? 'desc' : 'asc'}')">
                            <span class="fa ${sortby === 'integer' ? (sortorder === 'asc' ? 'fa-sort-up' : 'fa-sort-down') : 'fa-sort'}"></span>
                        </a>
                    </th>
                    <th>
                        Float
                        <a href="javascript:void(0)" onclick="changeSort('float', '${sortby == 'float' && sortorder == 'asc' ? 'desc' : 'asc'}')">
                            <span class="fa ${sortby === 'float' ? (sortorder === 'asc' ? 'fa-sort-up' : 'fa-sort-down') : 'fa-sort'}"></span>
                        </a>
                    </th>
                    <th>
                        Date
                        <a href="javascript:void(0)" onclick="changeSort('date', '${sortby == 'date' && sortorder == 'asc' ? 'desc' : 'asc'}')">
                            <span class="fa ${sortby === 'date' ? (sortorder === 'asc' ? 'fa-sort-up' : 'fa-sort-down') : 'fa-sort'}"></span>
                        </a>
                    </th>
                    <th>
                        Boolean
                        <a href="javascript:void(0)" onclick="changeSort('boolean', '${sortby == 'boolean' && sortorder == 'asc' ? 'desc' : 'asc'}')">
                            <span class="fa ${sortby === 'boolean' ? (sortorder === 'asc' ? 'fa-sort-up' : 'fa-sort-down') : 'fa-sort'}"></span>
                        </a>
                    </th>
                    <th>Action</th>
                </tr>
                `
            $('#data-head').html(html)
        };

        const pagination = (currentPage, totalPages) => {
            let html = `
                <li class="page-item ${params.page == 1 ? 'disabled' : ''}">
                    <a class="page-link" onclick="changePage(${currentPage - 1})">Previous</a>
                </li>`;

            for (let page = 1; page <= totalPages; page++) {
                html += `
                <li class="page-item ${page === currentPage ? 'active' : ''} ">
                    <a class="page-link" onclick="changePage(${page})">${page}</a>
                </li>`;
            }

            html += `
                <li class="page-item ${params.page == totalPages ? 'disabled' : ''}">
                    <a class="page-link"  onclick="changePage(${currentPage + 1})">Next</a>
                </li>`;

            $("#pagination").html(html)
        };

        const changePage = (page) => {
            params.page = page;
            if (params.sortby) {
                readData({ sortby: params.sortby, ...getFilterParams(), sortorder: params.sortorder, page: page });
            } else {
                readData({ ...getFilterParams(), page: page });
            }
        }

        const changeSort = (sortby, sortorder) => {
            console.log(`SortBy: ${sortby}, SortOrder: ${sortorder}`);
            params.sortby = sortby; // Update sortby parameter in params
            params.sortorder = sortorder; // Update sortorder parameter in params
            readData({ sortby, sortorder, ...getFilterParams(), page: params.page }); // Pass sorting parameters and current page
        }
        const showAdd = () => {
            $('#create-form').show()
        };

        const closeAdd = () => {
            $('#create-form').hide()
        };

        function closeEdit() {
            const form = $("#edit-form");
            form.css('display', 'none');
        }
        readData(params)


    </script>
</body>

</html>